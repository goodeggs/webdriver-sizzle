// Generated by CoffeeScript 1.7.1
var Deferred, SIZZLE, WebElement, fs, getSizzleCode, path, selenium;

selenium = require('selenium-webdriver');

path = require('path');

fs = require('fs');

SIZZLE = 'window["___$_Sizzle__"]';

Deferred = selenium.promise.Deferred;

WebElement = selenium.WebElement;

getSizzleCode = function() {
  var deferred;
  fs.readFile(require.resolve('sizzle'), 'utf8', function(err, sizzleCode) {
    if (err != null) {
      return deferred.reject(err);
    }
    return deferred.fulfill(sizzleCode);
  });
  return deferred = new Deferred;
};

module.exports = function(driver) {
  var all, hasSizzle, injectSizzle, one;
  hasSizzle = function() {
    var deferred;
    driver.executeScript("return typeof " + SIZZLE + " !== 'undefined'").then(function(results) {
      if (results) {
        return deferred.fulfill();
      } else {
        return deferred.reject();
      }
    });
    return deferred = new Deferred;
  };
  injectSizzle = function() {
    return getSizzleCode().then(function(sizzleCode) {
      return driver.executeScript("var module = {exports: {}}; " + sizzleCode + "; " + SIZZLE + " = module.exports;");
    });
  };
  one = function(selector) {
    var deferred, lookup, script;
    script = "return (" + SIZZLE + "(" + (JSON.stringify(selector)) + ") || [])[0];";
    lookup = function() {
      return driver.findElement(selenium.By.js(script)).then(deferred.fulfill);
    };
    hasSizzle().then(lookup, function() {
      return injectSizzle().then(lookup);
    }).then(null, function(err) {
      throw new Error("Selector " + selector + " matches nothing");
    });
    return new WebElement(driver, deferred = new Deferred);
  };
  all = function(selector) {
    var lookup, script;
    script = "return (" + SIZZLE + "(" + (JSON.stringify(selector)) + ") || []);";
    lookup = function() {
      return driver.findElements(selenium.By.js(script));
    };
    return hasSizzle().then(lookup, function() {
      return injectSizzle().then(lookup);
    });
  };
  one.all = all;
  return one;
};
